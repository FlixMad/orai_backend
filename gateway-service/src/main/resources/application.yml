server:
  port: 8181
logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.web.socket: DEBUG
spring:
  application:
    name: gateway-service
  cloud:
    client:
      hostname: localhost
    gateway:
      globalcors:
        cors-configurations:
          "[/**]": # 모든 경로에 대한 CORS 설정
            allowed-origins:
              - "https://jiangxy.github.io"
              - "http://localhost:3000"
              - "http://localhost:8181"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
            allow-credentials: true

#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Cloud Gateway Global Filter
#            preLogger: true
#            postLogger: true
#        - name: DedupeResponseHeader
#          args:
#            name: Access-Control-Allow-Credentials Access-Control-Allow-Origin
#            strategy: RETAIN_FIRST
      routes:
        #유저 서비스
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RewritePath=/user-service/(?<path>.*), /$\{path}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/user-service/v3/api-docs/**
            - Method=GET
          filters:
            - RewritePath=/api/payments/(?<path>.*), /$\{path}

        # 채팅 서비스(웹소켓)
        - id: chat-service-ws
          predicates:
            - Path=/ws, /ws/**, /stomp/**
          uri: lb://CHAT-SERVICE
          filters:
            - AuthorizationHeaderFilter

        # 채팅 서비스 (일반 http)
        - id: chat-service-http
          uri: lb://CHAT-SERVICE
          predicates:
            - Path=/chat-service/**
          filters:
            - RewritePath=/chat-service/(?<path>.*), /$\{path}
            - AuthorizationHeaderFilter

        #캘린더 서비스
        - id: calendar-service
          uri: lb://CALENDAR-SERVICE
          predicates:
            - Path=/calendar-service/**
          filters:
            - RewritePath=/calendar-service/(?<path>.*), /$\{path}
springdoc:
  swagger-ui:
    use-root-path: true
    urls[0]:
      name: 회원 서비스
      url: http://localhost:8181/user-service/v3/api-docs
    urls[1]:
      name: 채팅 서비스
      url: http://localhost:8181/chat-service/v3/api-docs
    urls[2]:
      name: 캘린더 서비스
      url: http://localhost:8181/calendar-service/v3/api-docs
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

jwt:
  expiration: 60
  secretKey: mysecretkeymysecretkeymysecretkeymysecretkeymysecretkeymysecretkeymysecretkey
  secretKeyRt: myrefreshsecretkeymyrefreshsecretkeymyrefreshsecretkeymyrefreshsecretkeymyrefreshsecretkey # 리프레시 토큰 서명용 비밀 키
  expirationRt: 1440         # 리프레시 토큰 유효 시간 (분 단위)
# 액츄에이터 등록 (beans: 컨테이너에 등록된 빈 보여줌, health: 서버 살아 있는지 알려줌)
#management:
#  endpoints:
#    web:
#      exposure:
#        include: refresh, health, busrefresh, beans, httpexchanges



